// Copyright 2021 ETH Zurich and University of Bologna.
// Solderpad Hardware License, Version 0.51, see LICENSE for details.
// SPDX-License-Identifier: SHL-0.51

// AUTOMATICALLY GENERATED by clustergen.py; edit the script or configuration
// instead.






`include "axi/typedef.svh"

module snitch_cluster_wrapper (
  input  logic                                   clk_i,
  input  logic                                   rst_ni,
  input  logic [snitch_cluster_pkg::NrCores-1:0] debug_req_i,
  input  logic [snitch_cluster_pkg::NrCores-1:0] meip_i,
  input  logic [snitch_cluster_pkg::NrCores-1:0] mtip_i,
  input  logic [snitch_cluster_pkg::NrCores-1:0] msip_i,
  input  snitch_cluster_pkg::narrow_in_req_t     narrow_in_req_i,
  output snitch_cluster_pkg::narrow_in_resp_t    narrow_in_resp_o,
  output snitch_cluster_pkg::narrow_out_req_t    narrow_out_req_o,
  input  snitch_cluster_pkg::narrow_out_resp_t   narrow_out_resp_i,
  output snitch_cluster_pkg::wide_out_req_t      wide_out_req_o,
  input  snitch_cluster_pkg::wide_out_resp_t     wide_out_resp_i,
  input  snitch_cluster_pkg::wide_in_req_t       wide_in_req_i,
  output snitch_cluster_pkg::wide_in_resp_t      wide_in_resp_o
);

  localparam int unsigned NumIntOutstandingLoads [9] = '{1, 1, 1, 1, 1, 1, 1, 1, 1};
  localparam int unsigned NumIntOutstandingMem [9] = '{4, 4, 4, 4, 4, 4, 4, 4, 4};
  localparam int unsigned NumFPOutstandingLoads [9] = '{4, 4, 4, 4, 4, 4, 4, 4, 4};
  localparam int unsigned NumFPOutstandingMem [9] = '{4, 4, 4, 4, 4, 4, 4, 4, 4};
  localparam int unsigned NumDTLBEntries [9] = '{1, 1, 1, 1, 1, 1, 1, 1, 1};
  localparam int unsigned NumITLBEntries [9] = '{1, 1, 1, 1, 1, 1, 1, 1, 1};
  localparam int unsigned NumSequencerInstr [9] = '{16, 16, 16, 16, 16, 16, 16, 16, 16};
  localparam int unsigned NumSsrs [9] = '{3, 3, 3, 3, 3, 3, 3, 3, 1};
  localparam int unsigned SsrMuxRespDepth [9] = '{4, 4, 4, 4, 4, 4, 4, 4, 4};

  // Snitch cluster under test.
  snitch_cluster #(
    .PhysicalAddrWidth (48),
    .NarrowDataWidth (64),
    .WideDataWidth (512),
    .NarrowIdWidthIn (snitch_cluster_pkg::NarrowIdWidthIn),
    .WideIdWidthIn (snitch_cluster_pkg::WideIdWidthIn),
    .NarrowUserWidth (snitch_cluster_pkg::NarrowUserWidth),
    .WideUserWidth (snitch_cluster_pkg::WideUserWidth),
    .BootAddr (32'h1000),
    .narrow_in_req_t (snitch_cluster_pkg::narrow_in_req_t),
    .narrow_in_resp_t (snitch_cluster_pkg::narrow_in_resp_t),
    .narrow_out_req_t (snitch_cluster_pkg::narrow_out_req_t),
    .narrow_out_resp_t (snitch_cluster_pkg::narrow_out_resp_t),
    .wide_out_req_t (snitch_cluster_pkg::wide_out_req_t),
    .wide_out_resp_t (snitch_cluster_pkg::wide_out_resp_t),
    .wide_in_req_t (snitch_cluster_pkg::wide_in_req_t),
    .wide_in_resp_t (snitch_cluster_pkg::wide_in_resp_t),
    .NrHives (1),
    .NrCores (9),
    .TCDMDepth (512),
    .ZeroMemorySize (64),
    .ClusterPeriphSize (64),
    .NrBanks (32),
    .DMAAxiReqFifoDepth (3),
    .DMAReqFifoDepth (3),
    .ICacheLineWidth (snitch_cluster_pkg::ICacheLineWidth),
    .ICacheLineCount (snitch_cluster_pkg::ICacheLineCount),
    .ICacheSets (snitch_cluster_pkg::ICacheSets),
    .VMSupport (1),
    .RVE (9'b000000000),
    .RVF (9'b111111111),
    .RVD (9'b111111111),
    .XDivSqrt (9'b000000000),
    .XF16 (9'b011111111),
    .XF16ALT (9'b011111111),
    .XF8 (9'b011111111),
    .XF8ALT (9'b011111111),
    .XFVEC (9'b011111111),
    .XFDOTP (9'b011111111),
    .Xdma (9'b100000000),
    .Xssr (9'b011111111),
    .Xfrep (9'b011111111),
    .FPUImplementation (snitch_cluster_pkg::FPUImplementation),
    .SnitchPMACfg (snitch_cluster_pkg::SnitchPMACfg),
    .NumIntOutstandingLoads (NumIntOutstandingLoads),
    .NumIntOutstandingMem (NumIntOutstandingMem),
    .NumFPOutstandingLoads (NumFPOutstandingLoads),
    .NumFPOutstandingMem (NumFPOutstandingMem),
    .NumDTLBEntries (NumDTLBEntries),
    .NumITLBEntries (NumITLBEntries),
    .NumSsrsMax (3),
    .NumSsrs (NumSsrs),
    .SsrMuxRespDepth (SsrMuxRespDepth),
    .SsrRegs (snitch_cluster_pkg::SsrRegs),
    .SsrCfgs (snitch_cluster_pkg::SsrCfgs),
    .NumSequencerInstr (NumSequencerInstr),
    .Hive (snitch_cluster_pkg::Hive),
    .Topology (snitch_pkg::LogarithmicInterconnect),
    .Radix (2),
    .RegisterOffloadReq (1),
    .RegisterOffloadRsp (1),
    .RegisterCoreReq (1),
    .RegisterCoreRsp (1),
    .RegisterTCDMCuts (0),
    .RegisterExtWide (0),
    .RegisterExtNarrow (0),
    .RegisterFPUReq (0),
    .RegisterFPUIn (0),
    .RegisterFPUOut (0),
    .RegisterSequencer (0),
    .IsoCrossing (0),
    .NarrowXbarLatency (axi_pkg::CUT_ALL_PORTS),
    .WideXbarLatency (axi_pkg::CUT_ALL_PORTS),
    .WideMaxMstTrans (4),
    .WideMaxSlvTrans (4),
    .NarrowMaxMstTrans (4),
    .NarrowMaxSlvTrans (4),
    .sram_cfg_t (snitch_cluster_pkg::sram_cfg_t),
    .sram_cfgs_t (snitch_cluster_pkg::sram_cfgs_t)
  ) i_cluster (
    .clk_i,
    .rst_ni,
    .debug_req_i,
    .meip_i,
    .mtip_i,
    .msip_i,
    .hart_base_id_i (10'h0),
    .cluster_base_addr_i (48'h10000000),
    .clk_d2_bypass_i (1'b0),
    .sram_cfgs_i (snitch_cluster_pkg::sram_cfgs_t'('0)),
    .narrow_in_req_i,
    .narrow_in_resp_o,
    .narrow_out_req_o,
    .narrow_out_resp_i,
    .wide_out_req_o,
    .wide_out_resp_i,
    .wide_in_req_i,
    .wide_in_resp_o
  );
endmodule
