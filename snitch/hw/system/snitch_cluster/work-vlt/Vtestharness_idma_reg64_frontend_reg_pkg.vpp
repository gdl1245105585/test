`begin_keywords "1800-2017"
`line 1 "/repo/hw/ip/future/src/idma_reg64_frontend_reg_pkg.sv" 1
 
 
 

`line 5 "/repo/hw/ip/future/src/idma_reg64_frontend_reg_pkg.sv" 0
 

`line 7 "/repo/hw/ip/future/src/idma_reg64_frontend_reg_pkg.sv" 0
package idma_reg64_frontend_reg_pkg;

`line 9 "/repo/hw/ip/future/src/idma_reg64_frontend_reg_pkg.sv" 0
   
  parameter int BlockAw = 6;

`line 12 "/repo/hw/ip/future/src/idma_reg64_frontend_reg_pkg.sv" 0
   
   
   

`line 16 "/repo/hw/ip/future/src/idma_reg64_frontend_reg_pkg.sv" 0
  typedef struct packed {
    logic [63:0] q;
  } idma_reg64_frontend_reg2hw_src_addr_reg_t;

`line 20 "/repo/hw/ip/future/src/idma_reg64_frontend_reg_pkg.sv" 0
  typedef struct packed {
    logic [63:0] q;
  } idma_reg64_frontend_reg2hw_dst_addr_reg_t;

`line 24 "/repo/hw/ip/future/src/idma_reg64_frontend_reg_pkg.sv" 0
  typedef struct packed {
    logic [63:0] q;
  } idma_reg64_frontend_reg2hw_num_bytes_reg_t;

`line 28 "/repo/hw/ip/future/src/idma_reg64_frontend_reg_pkg.sv" 0
  typedef struct packed {
    logic        q;
  } idma_reg64_frontend_logic_struct_t;

`line 32 "/repo/hw/ip/future/src/idma_reg64_frontend_reg_pkg.sv" 0
  typedef struct packed {
    idma_reg64_frontend_logic_struct_t decouple;
    idma_reg64_frontend_logic_struct_t deburst;
    idma_reg64_frontend_logic_struct_t serialize;
  } idma_reg64_frontend_reg2hw_conf_reg_t;

`line 38 "/repo/hw/ip/future/src/idma_reg64_frontend_reg_pkg.sv" 0
  typedef struct packed {
    logic [63:0] q;
    logic        re;
  } idma_reg64_frontend_reg2hw_next_id_reg_t;

`line 43 "/repo/hw/ip/future/src/idma_reg64_frontend_reg_pkg.sv" 0
  typedef struct packed {
    logic [63:0] q;
    logic        re;
  } idma_reg64_frontend_reg2hw_done_reg_t;

`line 48 "/repo/hw/ip/future/src/idma_reg64_frontend_reg_pkg.sv" 0
  typedef struct packed {
    logic        d;
  } idma_reg64_frontend_hw2reg_status_reg_t;

`line 52 "/repo/hw/ip/future/src/idma_reg64_frontend_reg_pkg.sv" 0
  typedef struct packed {
    logic [63:0] d;
  } idma_reg64_frontend_hw2reg_next_id_reg_t;

`line 56 "/repo/hw/ip/future/src/idma_reg64_frontend_reg_pkg.sv" 0
  typedef struct packed {
    logic [63:0] d;
  } idma_reg64_frontend_hw2reg_done_reg_t;

`line 60 "/repo/hw/ip/future/src/idma_reg64_frontend_reg_pkg.sv" 0
   
  typedef struct packed {
    idma_reg64_frontend_reg2hw_src_addr_reg_t src_addr;  
    idma_reg64_frontend_reg2hw_dst_addr_reg_t dst_addr;  
    idma_reg64_frontend_reg2hw_num_bytes_reg_t num_bytes;  
    idma_reg64_frontend_reg2hw_conf_reg_t conf;  
    idma_reg64_frontend_reg2hw_next_id_reg_t next_id;  
    idma_reg64_frontend_reg2hw_done_reg_t done;  
  } idma_reg64_frontend_reg2hw_t;

`line 70 "/repo/hw/ip/future/src/idma_reg64_frontend_reg_pkg.sv" 0
   
  typedef struct packed {
    idma_reg64_frontend_hw2reg_status_reg_t status;  
    idma_reg64_frontend_hw2reg_next_id_reg_t next_id;  
    idma_reg64_frontend_hw2reg_done_reg_t done;  
  } idma_reg64_frontend_hw2reg_t;

`line 77 "/repo/hw/ip/future/src/idma_reg64_frontend_reg_pkg.sv" 0
   
  parameter logic [BlockAw-1:0] IDMA_REG64_FRONTEND_SRC_ADDR_OFFSET = 6'h 0;
  parameter logic [BlockAw-1:0] IDMA_REG64_FRONTEND_DST_ADDR_OFFSET = 6'h 8;
  parameter logic [BlockAw-1:0] IDMA_REG64_FRONTEND_NUM_BYTES_OFFSET = 6'h 10;
  parameter logic [BlockAw-1:0] IDMA_REG64_FRONTEND_CONF_OFFSET = 6'h 18;
  parameter logic [BlockAw-1:0] IDMA_REG64_FRONTEND_STATUS_OFFSET = 6'h 20;
  parameter logic [BlockAw-1:0] IDMA_REG64_FRONTEND_NEXT_ID_OFFSET = 6'h 28;
  parameter logic [BlockAw-1:0] IDMA_REG64_FRONTEND_DONE_OFFSET = 6'h 30;

`line 86 "/repo/hw/ip/future/src/idma_reg64_frontend_reg_pkg.sv" 0
   
  parameter logic [0:0] IDMA_REG64_FRONTEND_STATUS_RESVAL = 1'h 0;
  parameter logic [63:0] IDMA_REG64_FRONTEND_NEXT_ID_RESVAL = 64'h 0;
  parameter logic [63:0] IDMA_REG64_FRONTEND_DONE_RESVAL = 64'h 0;

`line 91 "/repo/hw/ip/future/src/idma_reg64_frontend_reg_pkg.sv" 0
   
  typedef enum int {
    IDMA_REG64_FRONTEND_SRC_ADDR,
    IDMA_REG64_FRONTEND_DST_ADDR,
    IDMA_REG64_FRONTEND_NUM_BYTES,
    IDMA_REG64_FRONTEND_CONF,
    IDMA_REG64_FRONTEND_STATUS,
    IDMA_REG64_FRONTEND_NEXT_ID,
    IDMA_REG64_FRONTEND_DONE
  } idma_reg64_frontend_id_e;

`line 102 "/repo/hw/ip/future/src/idma_reg64_frontend_reg_pkg.sv" 0
   
  parameter logic [3:0] IDMA_REG64_FRONTEND_PERMIT [7] = '{
    4'b 1111,  
    4'b 1111,  
    4'b 1111,  
    4'b 0001,  
    4'b 0001,  
    4'b 1111,  
    4'b 1111   
  };

`line 113 "/repo/hw/ip/future/src/idma_reg64_frontend_reg_pkg.sv" 0
endpackage


`line 116 "/repo/hw/ip/future/src/idma_reg64_frontend_reg_pkg.sv" 2
