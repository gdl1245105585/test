`begin_keywords "1800-2017"
`line 1 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/common_cells-f9d1cdce7573d0e2/src/mem_to_banks.sv" 1
 
 
 
 
 
 
 
 
 

`line 11 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/common_cells-f9d1cdce7573d0e2/src/mem_to_banks.sv" 0
 

`line 13 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/common_cells-f9d1cdce7573d0e2/src/mem_to_banks.sv" 0
 
 
module mem_to_banks #(
   
  parameter int unsigned AddrWidth = 32'd0,
   
  parameter int unsigned DataWidth = 32'd0,
   
  parameter int unsigned AtopWidth = 32'd0,
   
  parameter int unsigned NumBanks  = 32'd0,
   
  parameter bit          HideStrb  = 1'b0,
   
  parameter int unsigned MaxTrans  = 32'd1,
   
  parameter int unsigned FifoDepth = 32'd1,
   
  parameter  type atop_t     = logic [AtopWidth-1:0],
   
  localparam type addr_t     = logic [AddrWidth-1:0],
   
  localparam type inp_data_t = logic [DataWidth-1:0],
   
  localparam type inp_strb_t = logic [DataWidth/8-1:0],
   
  localparam type oup_data_t = logic [DataWidth/NumBanks-1:0],
   
  localparam type oup_strb_t = logic [DataWidth/NumBanks/8-1:0]
) (
   
  input  logic                      clk_i,
   
  input  logic                      rst_ni,
   
  input  logic                      req_i,
   
  output logic                      gnt_o,
   
  input  addr_t                     addr_i,
   
  input  inp_data_t                 wdata_i,
   
  input  inp_strb_t                 strb_i,
   
  input  atop_t                     atop_i,
   
  input  logic                      we_i,
   
  output logic                      rvalid_o,
   
  output inp_data_t                 rdata_o,
   
  output logic      [NumBanks-1:0]  bank_req_o,
   
  input  logic      [NumBanks-1:0]  bank_gnt_i,
   
  output addr_t     [NumBanks-1:0]  bank_addr_o,
   
  output oup_data_t [NumBanks-1:0]  bank_wdata_o,
   
  output oup_strb_t [NumBanks-1:0]  bank_strb_o,
   
  output atop_t     [NumBanks-1:0]  bank_atop_o,
   
  output logic      [NumBanks-1:0]  bank_we_o,
   
  input  logic      [NumBanks-1:0]  bank_rvalid_i,
   
  input  oup_data_t [NumBanks-1:0]  bank_rdata_i
);

`line 85 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/common_cells-f9d1cdce7573d0e2/src/mem_to_banks.sv" 0
  localparam int unsigned DataBytes    = $bits(inp_strb_t);
  localparam int unsigned BitsPerBank  = $bits(oup_data_t);
  localparam int unsigned BytesPerBank = $bits(oup_strb_t);

`line 89 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/common_cells-f9d1cdce7573d0e2/src/mem_to_banks.sv" 0
  typedef struct packed {
    addr_t     addr;
    oup_data_t wdata;
    oup_strb_t strb;
    atop_t     atop;
    logic      we;
  } req_t;

`line 97 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/common_cells-f9d1cdce7573d0e2/src/mem_to_banks.sv" 0
  logic                 req_valid;
  logic [NumBanks-1:0]              req_ready,
                        resp_valid, resp_ready;
  req_t [NumBanks-1:0]  bank_req,
                        bank_oup;
  logic [NumBanks-1:0]  bank_req_internal, bank_gnt_internal, zero_strobe, dead_response;
  logic                 dead_write_fifo_full;

`line 105 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/common_cells-f9d1cdce7573d0e2/src/mem_to_banks.sv" 0
  function automatic addr_t align_addr(input addr_t addr);
    return (addr >> $clog2(DataBytes)) << $clog2(DataBytes);
  endfunction

`line 109 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/common_cells-f9d1cdce7573d0e2/src/mem_to_banks.sv" 0
   
  assign req_valid = req_i & gnt_o;
  for (genvar i = 0; unsigned'(i) < NumBanks; i++) begin : gen_reqs
    assign bank_req[i].addr  = align_addr(addr_i) + i * BytesPerBank;
    assign bank_req[i].wdata = wdata_i[i*BitsPerBank+:BitsPerBank];
    assign bank_req[i].strb  = strb_i[i*BytesPerBank+:BytesPerBank];
    assign bank_req[i].atop  = atop_i;
    assign bank_req[i].we    = we_i;
    stream_fifo #(
      .FALL_THROUGH ( 1'b1         ),
      .DATA_WIDTH   ( $bits(req_t) ),
      .DEPTH        ( FifoDepth    ),
      .T            ( req_t        )
    ) i_ft_reg (
      .clk_i,
      .rst_ni,
      .flush_i    ( 1'b0          ),
      .testmode_i ( 1'b0          ),
      .usage_o    (),
      .data_i     ( bank_req[i]   ),
      .valid_i    ( req_valid     ),
      .ready_o    ( req_ready[i]  ),
      .data_o     ( bank_oup[i]   ),
      .valid_o    ( bank_req_internal[i] ),
      .ready_i    ( bank_gnt_internal[i] )
    );
    assign bank_addr_o[i]  = bank_oup[i].addr;
    assign bank_wdata_o[i] = bank_oup[i].wdata;
    assign bank_strb_o[i]  = bank_oup[i].strb;
    assign bank_atop_o[i]  = bank_oup[i].atop;
    assign bank_we_o[i]    = bank_oup[i].we;

`line 141 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/common_cells-f9d1cdce7573d0e2/src/mem_to_banks.sv" 0
    assign zero_strobe[i] = (bank_oup[i].strb == '0);

`line 143 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/common_cells-f9d1cdce7573d0e2/src/mem_to_banks.sv" 0
    if (HideStrb) begin : gen_hide_strb
      assign bank_req_o[i] = (bank_oup[i].we && zero_strobe[i]) ? 1'b0 : bank_req_internal[i];
      assign bank_gnt_internal[i] = (bank_oup[i].we && zero_strobe[i]) ? 1'b1 : bank_gnt_i[i];
    end else begin : gen_legacy_strb
      assign bank_req_o[i] = bank_req_internal[i];
      assign bank_gnt_internal[i] = bank_gnt_i[i];
    end
  end

`line 152 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/common_cells-f9d1cdce7573d0e2/src/mem_to_banks.sv" 0
   
  assign gnt_o = (&req_ready) & (&resp_ready) & !dead_write_fifo_full;

`line 155 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/common_cells-f9d1cdce7573d0e2/src/mem_to_banks.sv" 0
  if (HideStrb) begin : gen_dead_write_fifo
    fifo_v3 #(
      .FALL_THROUGH ( 1'b1     ),
      .DEPTH        ( MaxTrans+1 ),
      .DATA_WIDTH   ( NumBanks )
    ) i_dead_write_fifo (
      .clk_i,
      .rst_ni,
      .flush_i    ( 1'b0                    ),
      .testmode_i ( 1'b0                    ),
      .full_o     ( dead_write_fifo_full    ),
      .empty_o    (),
      .usage_o    (),
      .data_i     ( bank_we_o & zero_strobe ),
      .push_i     ( req_i & gnt_o           ),
      .data_o     ( dead_response           ),
      .pop_i      ( rvalid_o                )
    );
  end else begin : gen_no_dead_write_fifo
    assign dead_response = '0;
    assign dead_write_fifo_full = 1'b0;
  end

`line 178 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/common_cells-f9d1cdce7573d0e2/src/mem_to_banks.sv" 0
   
  for (genvar i = 0; unsigned'(i) < NumBanks; i++) begin : gen_resp_regs
    stream_fifo #(
      .FALL_THROUGH ( 1'b1              ),
      .DATA_WIDTH   ( $bits(oup_data_t) ),
      .DEPTH        ( FifoDepth         ),
      .T            ( oup_data_t        )
    ) i_ft_reg (
      .clk_i,
      .rst_ni,
      .flush_i    ( 1'b0                                ),
      .testmode_i ( 1'b0                                ),
      .usage_o    (),
      .data_i     ( bank_rdata_i[i]                     ),
      .valid_i    ( bank_rvalid_i[i]                    ),
      .ready_o    ( resp_ready[i]                       ),
      .data_o     ( rdata_o[i*BitsPerBank+:BitsPerBank] ),
      .valid_o    ( resp_valid[i]                       ),
      .ready_i    ( rvalid_o & !dead_response[i]        )
    );
  end
  assign rvalid_o = &(resp_valid | dead_response);

`line 201 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/common_cells-f9d1cdce7573d0e2/src/mem_to_banks.sv" 0
   
   
   
   
     
                 
          
           
          
             
          
    
  
  
   
endmodule

`line 218 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/common_cells-f9d1cdce7573d0e2/src/mem_to_banks.sv" 2
