`begin_keywords "1800-2017"
`line 1 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 1


`line 17 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0

`line 17 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0

`line 17 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0

`line 17 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0

`line 17 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0

`line 17 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0

`line 17 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0

`line 17 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0

`line 17 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0

`line 17 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0

`line 17 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0

`line 17 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0

`line 17 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0

`line 17 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0

`line 17 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
 

`line 19 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
module dm_mem #(
  parameter int unsigned        NrHarts          =  1,
  parameter int unsigned        BusWidth         = 32,
  parameter logic [NrHarts-1:0] SelectableHarts  = {NrHarts{1'b1}},
  parameter int unsigned        DmBaseAddress    = '0
) (
  input  logic                             clk_i,        
  input  logic                             rst_ni,       

`line 28 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
  output logic [NrHarts-1:0]               debug_req_o,
  input  logic [19:0]                      hartsel_i,
   
  input  logic [NrHarts-1:0]               haltreq_i,
  input  logic [NrHarts-1:0]               resumereq_i,
  input  logic                             clear_resumeack_i,

`line 35 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
   
  output logic [NrHarts-1:0]               halted_o,     
  output logic [NrHarts-1:0]               resuming_o,   

`line 39 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
  input  logic [dm::ProgBufSize-1:0][31:0] progbuf_i,     

`line 41 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
  input  logic [dm::DataCount-1:0][31:0]   data_i,        
  output logic [dm::DataCount-1:0][31:0]   data_o,        
  output logic                             data_valid_o,  
   
  input  logic                             cmd_valid_i,
  input  dm::command_t                     cmd_i,
  output logic                             cmderror_valid_o,
  output dm::cmderr_e                      cmderror_o,
  output logic                             cmdbusy_o,
   

`line 52 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
   
  input  logic                             req_i,
  input  logic                             we_i,
  input  logic [BusWidth-1:0]              addr_i,
  input  logic [BusWidth-1:0]              wdata_i,
  input  logic [BusWidth/8-1:0]            be_i,
  output logic [BusWidth-1:0]              rdata_o
);
  localparam int unsigned DbgAddressBits = 12;
  localparam int unsigned HartSelLen     = (NrHarts == 1) ? 1 : $clog2(NrHarts);
  localparam int unsigned NrHartsAligned = 2**HartSelLen;
  localparam int unsigned MaxAar         = (BusWidth == 64) ? 4 : 3;
  localparam bit          HasSndScratch  = (DmBaseAddress != 0);
   
  localparam logic [4:0]  LoadBaseAddr   = (DmBaseAddress == 0) ? 5'd0 : 5'd10;

`line 68 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
  localparam logic [DbgAddressBits-1:0] DataBaseAddr        = (dm::DataAddr);
  localparam logic [DbgAddressBits-1:0] DataEndAddr         = (dm::DataAddr + 4*dm::DataCount - 1);
  localparam logic [DbgAddressBits-1:0] ProgBufBaseAddr     = (dm::DataAddr - 4*dm::ProgBufSize);
  localparam logic [DbgAddressBits-1:0] ProgBufEndAddr      = (dm::DataAddr - 1);
  localparam logic [DbgAddressBits-1:0] AbstractCmdBaseAddr = (ProgBufBaseAddr - 4*10);
  localparam logic [DbgAddressBits-1:0] AbstractCmdEndAddr  = (ProgBufBaseAddr - 1);

`line 75 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
  localparam logic [DbgAddressBits-1:0] WhereToAddr   = 'h300;
  localparam logic [DbgAddressBits-1:0] FlagsBaseAddr = 'h400;
  localparam logic [DbgAddressBits-1:0] FlagsEndAddr  = 'h7FF;

`line 79 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
  localparam logic [DbgAddressBits-1:0] HaltedAddr    = 'h100;
  localparam logic [DbgAddressBits-1:0] GoingAddr     = 'h104;
  localparam logic [DbgAddressBits-1:0] ResumingAddr  = 'h108;
  localparam logic [DbgAddressBits-1:0] ExceptionAddr = 'h10C;

`line 84 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
  logic [dm::ProgBufSize/2-1:0][63:0]   progbuf;
  logic [7:0][63:0]   abstract_cmd;
  logic [NrHarts-1:0] halted_d, halted_q;
  logic [NrHarts-1:0] resuming_d, resuming_q;
  logic               resume, go, going;

`line 90 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
  logic exception;
  logic unsupported_command;

`line 93 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
  logic [63:0] rom_rdata;
  logic [63:0] rdata_d, rdata_q;
  logic        word_enable32_q;

`line 97 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
   
   
  logic [HartSelLen-1:0] hartsel, wdata_hartsel;

`line 101 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
  assign hartsel       = hartsel_i[HartSelLen-1:0];
  assign wdata_hartsel = wdata_i[HartSelLen-1:0];

`line 104 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
  logic [NrHartsAligned-1:0] resumereq_aligned, haltreq_aligned,
                             halted_d_aligned, halted_q_aligned,
                             halted_aligned, resumereq_wdata_aligned,
                             resuming_d_aligned, resuming_q_aligned;

`line 109 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
  assign resumereq_aligned       = NrHartsAligned'(resumereq_i);
  assign haltreq_aligned         = NrHartsAligned'(haltreq_i);
  assign resumereq_wdata_aligned = NrHartsAligned'(resumereq_i);

`line 113 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
  assign halted_q_aligned        = NrHartsAligned'(halted_q);
  assign halted_d                = NrHarts'(halted_d_aligned);
  assign resuming_q_aligned      = NrHartsAligned'(resuming_q);
  assign resuming_d              = NrHarts'(resuming_d_aligned);

`line 118 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
   
   
  logic fwd_rom_d, fwd_rom_q;
  dm::ac_ar_cmd_t ac_ar;

`line 123 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
   
  assign ac_ar       = dm::ac_ar_cmd_t'(cmd_i.control);
  assign debug_req_o = haltreq_i;
  assign halted_o    = halted_q;
  assign resuming_o  = resuming_q;

`line 129 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
   
  assign progbuf = progbuf_i;

`line 132 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
  typedef enum logic [1:0] { Idle, Go, Resume, CmdExecuting } state_e;
  state_e state_d, state_q;

`line 135 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
   
  always_comb begin : p_hart_ctrl_queue
    cmderror_valid_o = 1'b0;
    cmderror_o       = dm::CmdErrNone;
    state_d          = state_q;
    go               = 1'b0;
    resume           = 1'b0;
    cmdbusy_o        = 1'b1;

`line 144 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
    unique case (state_q)
      Idle: begin
        cmdbusy_o = 1'b0;
        if (cmd_valid_i && halted_q_aligned[hartsel] && !unsupported_command) begin
           
          state_d = Go;
        end else if (cmd_valid_i) begin
           
          cmderror_valid_o = 1'b1;
          cmderror_o = dm::CmdErrorHaltResume;
        end
         
         
        if (resumereq_aligned[hartsel] && !resuming_q_aligned[hartsel] &&
            !haltreq_aligned[hartsel] && halted_q_aligned[hartsel]) begin
          state_d = Resume;
        end
      end

`line 163 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
      Go: begin
         
        cmdbusy_o = 1'b1;
        go        = 1'b1;
         
        if (going) begin
            state_d = CmdExecuting;
        end
      end

`line 173 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
      Resume: begin
        cmdbusy_o = 1'b1;
        resume = 1'b1;
        if (resuming_q_aligned[hartsel]) begin
          state_d = Idle;
        end
      end

`line 181 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
      CmdExecuting: begin
        cmdbusy_o = 1'b1;
        go        = 1'b0;
         
        if (halted_aligned[hartsel]) begin
          state_d = Idle;
        end
      end

`line 190 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
      default: ;
    endcase

`line 193 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
     
     
    if (unsupported_command && cmd_valid_i) begin
      cmderror_valid_o = 1'b1;
      cmderror_o = dm::CmdErrNotSupported;
    end

`line 200 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
    if (exception) begin
      cmderror_valid_o = 1'b1;
      cmderror_o = dm::CmdErrorException;
    end
  end

`line 206 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
   
  logic [63:0] word_mux;
  assign word_mux = (fwd_rom_q) ? rom_rdata : rdata_q;

`line 210 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
  if (BusWidth == 64) begin : gen_word_mux64
    assign rdata_o = word_mux;
  end else begin : gen_word_mux32
    assign rdata_o = (word_enable32_q) ? word_mux[32 +: 32] : word_mux[0 +: 32];
  end

`line 216 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
   
  logic [dm::DataCount-1:0][31:0] data_bits;
  logic [7:0][7:0] rdata;
  always_comb begin : p_rw_logic

`line 221 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
    halted_d_aligned   = NrHartsAligned'(halted_q);
    resuming_d_aligned = NrHartsAligned'(resuming_q);
    rdata_d        = rdata_q;
    data_bits      = data_i;
    rdata          = '0;

`line 227 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
     
    data_valid_o   = 1'b0;
    exception      = 1'b0;
    halted_aligned     = '0;
    going          = 1'b0;

`line 233 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
     
    if (clear_resumeack_i) begin
      resuming_d_aligned[hartsel] = 1'b0;
    end
     
    if (req_i) begin
       
      if (we_i) begin
        unique case (addr_i[DbgAddressBits-1:0]) inside
          HaltedAddr: begin
            halted_aligned[wdata_hartsel] = 1'b1;
            halted_d_aligned[wdata_hartsel] = 1'b1;
          end
          GoingAddr: begin
            going = 1'b1;
          end
          ResumingAddr: begin
             
            halted_d_aligned[wdata_hartsel] = 1'b0;
             
            resuming_d_aligned[wdata_hartsel] = 1'b1;
          end
           
          ExceptionAddr: exception = 1'b1;
           
          [DataBaseAddr:DataEndAddr]: begin
            data_valid_o = 1'b1;
            for (int dc = 0; dc < dm::DataCount; dc++) begin
              if ((addr_i[DbgAddressBits-1:2] - DataBaseAddr[DbgAddressBits-1:2]) == dc) begin
                for (int i = 0; i < $bits(be_i); i++) begin
                  if (be_i[i]) begin
                    if (i>3) begin  
                      if ((dc+1) < dm::DataCount) begin  
                        data_bits[dc+1][(i-4)*8+:8] = wdata_i[i*8+:8];
                      end
                    end else begin  
                      data_bits[dc][i*8+:8] = wdata_i[i*8+:8];
                    end
                  end
                end
              end
            end
          end
          default ;
        endcase

`line 279 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
       
      end else begin
        unique case (addr_i[DbgAddressBits-1:0]) inside
           
          WhereToAddr: begin
             
            if (resumereq_wdata_aligned[wdata_hartsel]) begin
              rdata_d = {32'b0, dm::jal('0, 21'(dm::ResumeAddress[11:0])-21'(WhereToAddr))};
            end

`line 289 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
             
            if (cmdbusy_o) begin
               
               
              if (cmd_i.cmdtype == dm::AccessRegister &&
                  !ac_ar.transfer && ac_ar.postexec) begin
                rdata_d = {32'b0, dm::jal('0, 21'(ProgBufBaseAddr)-21'(WhereToAddr))};
               
              end else begin
                rdata_d = {32'b0, dm::jal('0, 21'(AbstractCmdBaseAddr)-21'(WhereToAddr))};
              end
            end
          end

`line 303 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
          [DataBaseAddr:DataEndAddr]: begin
            rdata_d = {
                      data_i[$clog2(dm::DataCount)'(((addr_i[DbgAddressBits-1:3] - DataBaseAddr[DbgAddressBits-1:3]) << 1) + 1'b1)],
                      data_i[$clog2(dm::DataCount)'(((addr_i[DbgAddressBits-1:3] - DataBaseAddr[DbgAddressBits-1:3]) << 1))]
                      };
          end

`line 310 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
          [ProgBufBaseAddr:ProgBufEndAddr]: begin
            rdata_d = progbuf[$clog2(dm::ProgBufSize)'(addr_i[DbgAddressBits-1:3] -
                          ProgBufBaseAddr[DbgAddressBits-1:3])];
          end

`line 315 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
           
          [AbstractCmdBaseAddr:AbstractCmdEndAddr]: begin
             
            rdata_d = abstract_cmd[3'(addr_i[DbgAddressBits-1:3] -
                           AbstractCmdBaseAddr[DbgAddressBits-1:3])];
          end
           
          [FlagsBaseAddr:FlagsEndAddr]: begin
             
            if (({addr_i[DbgAddressBits-1:3], 3'b0} - FlagsBaseAddr[DbgAddressBits-1:0]) ==
              (DbgAddressBits'(hartsel) & {{(DbgAddressBits-3){1'b1}}, 3'b0})) begin
              rdata[DbgAddressBits'(hartsel) & DbgAddressBits'(3'b111)] = {6'b0, resume, go};
            end
            rdata_d = rdata;
          end
          default: ;
        endcase
      end
    end

`line 335 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
    data_o = data_bits;
  end

`line 338 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
  always_comb begin : p_abstract_cmd_rom
     
    unsupported_command = 1'b0;
     
     
    abstract_cmd[0][31:0]  = dm::illegal();
     
    abstract_cmd[0][63:32] = HasSndScratch ? dm::auipc(5'd10, '0) : dm::nop();
     
    abstract_cmd[1][31:0]  = HasSndScratch ? dm::srli(5'd10, 5'd10, 6'd12) : dm::nop();
    abstract_cmd[1][63:32] = HasSndScratch ? dm::slli(5'd10, 5'd10, 6'd12) : dm::nop();
    abstract_cmd[2][31:0]  = dm::nop();
    abstract_cmd[2][63:32] = dm::nop();
    abstract_cmd[3][31:0]  = dm::nop();
    abstract_cmd[3][63:32] = dm::nop();
    abstract_cmd[4][31:0]  = HasSndScratch ? dm::csrr(dm::CSR_DSCRATCH1, 5'd10) : dm::nop();
    abstract_cmd[4][63:32] = dm::ebreak();
    abstract_cmd[7:5]      = '0;

`line 357 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
     
    unique case (cmd_i.cmdtype)
       
       
       
      dm::AccessRegister: begin
        if (32'(ac_ar.aarsize) < MaxAar && ac_ar.transfer && ac_ar.write) begin
           
          abstract_cmd[0][31:0] = HasSndScratch ? dm::csrw(dm::CSR_DSCRATCH1, 5'd10) : dm::nop();
           
          if (ac_ar.regno[15:14] != '0) begin
            abstract_cmd[0][31:0] = dm::ebreak();  
            unsupported_command = 1'b1;
           
           
          end else if (HasSndScratch && ac_ar.regno[12] && (!ac_ar.regno[5]) &&
                      (ac_ar.regno[4:0] == 5'd10)) begin
             
            abstract_cmd[2][31:0]  = dm::csrw(dm::CSR_DSCRATCH0, 5'd8);
             
            abstract_cmd[2][63:32] = dm::load(ac_ar.aarsize, 5'd8, LoadBaseAddr, dm::DataAddr);
             
            abstract_cmd[3][31:0]  = dm::csrw(dm::CSR_DSCRATCH1, 5'd8);
             
            abstract_cmd[3][63:32] = dm::csrr(dm::CSR_DSCRATCH0, 5'd8);
           
          end else if (ac_ar.regno[12]) begin
             
            if (ac_ar.regno[5]) begin
              abstract_cmd[2][31:0] =
                  dm::float_load(ac_ar.aarsize, ac_ar.regno[4:0], LoadBaseAddr, dm::DataAddr);
            end else begin
              abstract_cmd[2][31:0] =
                  dm::load(ac_ar.aarsize, ac_ar.regno[4:0], LoadBaseAddr, dm::DataAddr);
            end
           
          end else begin
             
             
            abstract_cmd[2][31:0]  = dm::csrw(dm::CSR_DSCRATCH0, 5'd8);
             
            abstract_cmd[2][63:32] = dm::load(ac_ar.aarsize, 5'd8, LoadBaseAddr, dm::DataAddr);
             
            abstract_cmd[3][31:0]  = dm::csrw(dm::csr_reg_t'(ac_ar.regno[11:0]), 5'd8);
             
            abstract_cmd[3][63:32] = dm::csrr(dm::CSR_DSCRATCH0, 5'd8);
          end
        end else if (32'(ac_ar.aarsize) < MaxAar && ac_ar.transfer && !ac_ar.write) begin
           
          abstract_cmd[0][31:0]  = HasSndScratch ?
                                   dm::csrw(dm::CSR_DSCRATCH1, LoadBaseAddr) :
                                   dm::nop();
           
          if (ac_ar.regno[15:14] != '0) begin
              abstract_cmd[0][31:0] = dm::ebreak();  
              unsupported_command = 1'b1;
           
           
          end else if (HasSndScratch && ac_ar.regno[12] && (!ac_ar.regno[5]) &&
                      (ac_ar.regno[4:0] == 5'd10)) begin
             
            abstract_cmd[2][31:0]  = dm::csrw(dm::CSR_DSCRATCH0, 5'd8);
             
            abstract_cmd[2][63:32] = dm::csrr(dm::CSR_DSCRATCH1, 5'd8);
             
            abstract_cmd[3][31:0]  = dm::store(ac_ar.aarsize, 5'd8, LoadBaseAddr, dm::DataAddr);
             
            abstract_cmd[3][63:32] = dm::csrr(dm::CSR_DSCRATCH0, 5'd8);
           
          end else if (ac_ar.regno[12]) begin
             
            if (ac_ar.regno[5]) begin
              abstract_cmd[2][31:0] =
                  dm::float_store(ac_ar.aarsize, ac_ar.regno[4:0], LoadBaseAddr, dm::DataAddr);
            end else begin
              abstract_cmd[2][31:0] =
                  dm::store(ac_ar.aarsize, ac_ar.regno[4:0], LoadBaseAddr, dm::DataAddr);
            end
           
          end else begin
             
             
            abstract_cmd[2][31:0]  = dm::csrw(dm::CSR_DSCRATCH0, 5'd8);
             
            abstract_cmd[2][63:32] = dm::csrr(dm::csr_reg_t'(ac_ar.regno[11:0]), 5'd8);
             
            abstract_cmd[3][31:0]  = dm::store(ac_ar.aarsize, 5'd8, LoadBaseAddr, dm::DataAddr);
             
            abstract_cmd[3][63:32] = dm::csrr(dm::CSR_DSCRATCH0, 5'd8);
          end
        end else if (32'(ac_ar.aarsize) >= MaxAar || ac_ar.aarpostincrement == 1'b1) begin
           
           
           
          abstract_cmd[0][31:0] = dm::ebreak();  
          unsupported_command = 1'b1;
        end

`line 455 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
         
         
         
         
        if (ac_ar.postexec && !unsupported_command) begin
           
          abstract_cmd[4][63:32] = dm::nop();
        end
      end
       
       
       
      default: begin
        abstract_cmd[0][31:0] = dm::ebreak();
        unsupported_command = 1'b1;
      end
    endcase
  end

`line 474 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
  logic [63:0] rom_addr;
  assign rom_addr = 64'(addr_i);

`line 477 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
   
   
   
   
   
   
  if (HasSndScratch) begin : gen_rom_snd_scratch
    debug_rom i_debug_rom (
      .clk_i,
      .req_i,
      .addr_i  ( rom_addr  ),
      .rdata_o ( rom_rdata )
    );
  end else begin : gen_rom_one_scratch
     
     
     
    debug_rom_one_scratch i_debug_rom (
      .clk_i,
      .req_i,
      .addr_i  ( rom_addr  ),
      .rdata_o ( rom_rdata )
    );
  end

`line 502 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
   
   
  assign fwd_rom_d = logic'(addr_i[DbgAddressBits-1:0] >= dm::HaltAddress[DbgAddressBits-1:0]);

`line 506 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
  always_ff @(posedge clk_i or negedge rst_ni) begin : p_regs
    if (!rst_ni) begin
      fwd_rom_q       <= 1'b0;
      rdata_q         <= '0;
      state_q         <= Idle;
      word_enable32_q <= 1'b0;
    end else begin
      fwd_rom_q       <= fwd_rom_d;
      rdata_q         <= rdata_d;
      state_q         <= state_d;
      word_enable32_q <= addr_i[2];
    end
  end

`line 520 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
  always_ff @(posedge clk_i or negedge rst_ni) begin
    if (!rst_ni) begin
      halted_q   <= 1'b0;
      resuming_q <= 1'b0;
    end else begin
      halted_q   <= SelectableHarts & halted_d;
      resuming_q <= SelectableHarts & resuming_d;
    end
  end

`line 530 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 0
endmodule : dm_mem

`line 532 "/repo/hw/system/snitch_cluster/.bender/git/checkouts/riscv-dbg-bbbc33cfee9a7ddc/src/dm_mem.sv" 2
